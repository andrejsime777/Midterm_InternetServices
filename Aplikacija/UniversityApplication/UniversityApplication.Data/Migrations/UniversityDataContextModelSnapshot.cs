// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityApplication.Data;

namespace UniversityApplication.Data.Migrations
{
    [DbContext(typeof(UniversityDataContext))]
    partial class UniversityDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("UniversityApplication.Data.Entities.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Belgrade",
                            Country = "Serbia",
                            Name = "Partizan",
                            Owner = "Andrej"
                        },
                        new
                        {
                            Id = 2,
                            City = "Belgrade",
                            Country = "Serbia",
                            Name = "Crvena Zvezda",
                            Owner = "Petko"
                        },
                        new
                        {
                            Id = 3,
                            City = "Skopje",
                            Country = "Macedonia",
                            Name = "Vardar",
                            Owner = "Stanko"
                        },
                        new
                        {
                            Id = 4,
                            City = "Paris",
                            Country = "France",
                            Name = "Paris Saint Germain",
                            Owner = "Filip"
                        },
                        new
                        {
                            Id = 5,
                            City = "Manchester",
                            Country = "UK",
                            Name = "Manchester United",
                            Owner = "Martin"
                        });
                });

            modelBuilder.Entity("UniversityApplication.Data.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClubId")
                        .HasColumnType("int")
                        .HasColumnName("ClubId");

                    b.Property<DateTime?>("DOB")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("Rank");

                    b.Property<DateTime?>("SignDate")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("SignDate");

                    b.Property<int>("TotalGoals")
                        .HasColumnType("int")
                        .HasColumnName("TotalGoals");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClubId = 2,
                            DOB = new DateTime(2002, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Andrej",
                            LastName = "Postolovski",
                            Rank = 5,
                            SignDate = new DateTime(2018, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            TotalGoals = 5
                        },
                        new
                        {
                            Id = 2,
                            ClubId = 4,
                            DOB = new DateTime(1998, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Filip",
                            LastName = "Simonovski",
                            Rank = 5,
                            SignDate = new DateTime(2016, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            TotalGoals = 859
                        },
                        new
                        {
                            Id = 3,
                            ClubId = 3,
                            DOB = new DateTime(1972, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Stanko",
                            LastName = "Petkovski",
                            Rank = 5,
                            SignDate = new DateTime(2002, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            TotalGoals = 75411
                        },
                        new
                        {
                            Id = 4,
                            ClubId = 5,
                            DOB = new DateTime(2010, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Petar",
                            LastName = "Petrovski",
                            Rank = 5,
                            SignDate = new DateTime(2021, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            TotalGoals = 8
                        },
                        new
                        {
                            Id = 5,
                            ClubId = 1,
                            DOB = new DateTime(1990, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Petko",
                            LastName = "Stankovski",
                            Rank = 5,
                            SignDate = new DateTime(2012, 3, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            TotalGoals = 1522
                        });
                });

            modelBuilder.Entity("UniversityApplication.Data.Entities.Player", b =>
                {
                    b.HasOne("UniversityApplication.Data.Entities.Club", "Club")
                        .WithMany("Players")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("UniversityApplication.Data.Entities.Club", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
